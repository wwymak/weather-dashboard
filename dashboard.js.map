{"version":3,"sources":["dashboard.es6.js"],"names":[],"mappings":"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","file":"dashboard.js","sourcesContent":["/**\n * Main file for the charting js\n *\n * idea: main chart to have temp as time series, grouped by day of year\n * possibly to be zoomable into minute detail, with rainfall superimposed as an extra series above\n * -- would be really cool to do something along the lines of http://bl.ocks.org/emeeks/b57f4cc89dacd38fcdcd\n *\n * (showing pattern in rainfall and temp, which most people are interested in\n * rainfall + temp so you can know whetehr it's generally cold and wet/ hot and wet, vice versa etc\n *\n *\n * secondary charts:\n * wind direction distrubution average for the date range selected with brush (radar chart)\n *\n * battery level vs solar flux\n *\n */\n\nlet dateFormatter = d3.time.format('%Y/%m/%d %H:%M');\nlet xFilter; //crossfilter\n\nlet tempChart, batteryChart, rainfallChart; // types of charts\nlet transitionDuration = 500; //default transition times for chart zooming etc\n\n\nfunction dashboardInit() {\n  let tempChartWidth = document.getElementById('tempChart').offsetWidth,\n      tempChartHeight = tempChartWidth * 0.1,\n      rainFallChartWidth = document.getElementById('rainfallChart').offsetWidth,\n      rainFallChartHeight = rainFallChartWidth * 0.1;\n  tempChart = dc.lineChart('#tempChart')\n      .width(tempChartWidth)\n      .height(tempChartHeight)\n      .transitionDuration(transitionDuration)\n      .margins({top: 30, right: 50, bottom: 25, left: 40});\n  rainfallChart = dc.barChart('#rainfallChart')\n      .width(rainFallChartWidth)\n      .height(rainFallChartHeight)\n      .transitionDuration(10)\n      .margins({top: 30, right: 50, bottom: 25, left: 40});\n  //batteryChart = dc.lineChart('#batteryChart');\n}\n\nfunction getInitData() {\n  d3.csv('JCMB_2015.csv', (err, data) => {\n    if(err) {\n      alert(\"problem fetching data, please reload page\");\n      return\n    }\n    //parse data after loading to make sure numbers are numbers and dates are Date objs\n    data.forEach(d => {\n      d.dateTime = dateFormatter.parse(d.dateTime);\n      Object.keys(d).forEach((key) => {\n        if (d.hasOwnProperty(key) && key !== \"dateTime\") {\n          d[key] = +d[key];\n        }\n      })\n    });\n    data.forEach(d => {\n      d.month = d3.time.month(d.dateTime);\n      d.day = d3.time.day(d.dateTime);\n      d.hour = d3.time.hour(d.dateTime);\n    });\n\n\n    console.log(data[0]);\n\n    let minDate = d3.min(data, d => d.dateTime),\n        maxDate = d3.max(data, d => d.dateTime)\n\n    xFilter = crossfilter(data);\n\n    let dayDimension = xFilter.dimension(d => d.day);\n    let solarFluxDimension = xFilter.dimension(d => d.solarFlux);\n\n    let dayTempGroup = dayDimension.group().reduce((p, v) => {\n      ++p.count;\n      p.totalTemp += v.surfTemp;\n      p.avgTemp = p.totalTemp /p.count;\n      return p\n    }, (p,v) => {\n      --p.count;\n      p.totalTemp -= v.surfTemp;\n      p.avgTemp = p.totalTemp /p.count;\n      return p\n    }, () => {\n      return {\n        count: 0,\n        totalTemp: 0,\n        avgTemp: 0\n      }\n    });\n\n    let rainFallGroup = dayDimension.group().reduceSum(d => d.rainfall);\n\n    tempChart\n        .dimension(dayDimension)\n        .group(dayTempGroup)\n        .brushOn(true)\n        //.mouseZoomable(true)\n        //.keyAccessor(d => d.value.avgTemp)\n        .valueAccessor(d => d.value.avgTemp)\n        .x(d3.time.scale().domain([minDate, maxDate]))\n        .yAxisLabel('degrees Celcius')\n        .on('filtered', () => {\n          console.log(dayDimension.top(Infinity))\n        });\n\n    rainfallChart\n        .dimension(dayDimension)\n        .group(rainFallGroup)\n        .valueAccessor(d => d.value)\n        .yAxisLabel('mm')\n        .x(d3.time.scale().domain([minDate, maxDate]))\n        .elasticY(true)\n        .rangeChart(tempChart)\n\n\n    dc.renderAll();\n\n\n  })\n}\n\nfunction windowResizeHandler() {\n  //debounce function, basically redraw the chart on resize but only after you've\n  //finished resizing\n  let resizeTimer;\n  window.onresize = ((e) => {\n    clearTimeout(resizeTimer);\n    resizeTimer = setTimeout(() => {\n      dashboardInit();\n      dc.renderAll();\n    }, 250);\n  });\n\n}\n\ndashboardInit();\ngetInitData();"]}